% start ROOT

# ##########
# GRAMMMAR PRODUCTIONS
# ##########

#TOP-LEVEL
ROOT[TYPE=statement] -> S[-INTERROG, POL=?p] FS 
ROOT[TYPE=question] -> S[+INTERROG, POL=?p] QM
ROOT[TYPE=why] -> QCIAMAR[] QREL[] QM[]
ROOT[TYPE=where] -> QCAIT S[+INTERROG, POL=?p] QM

#[Q] how to implement slash categories for Ciamar a tha thu?
FS -> "." | "!"
QM -> "?"
#[TODO] ALL THESE QWORDS FUNCTION DIFFERENTLY, SO I'LL HAVE TO TREAT THEM INDIVIDUALLY
#GET CIAMAR WORKING FIRST, AND THEN DO THE NEXT ONES
#QWORD -> "ciamar" | "cò" | "dè"
#[TOWRITE] these are at ROOT level, AN is at V level, hence in verb file
QCIAMAR -> "ciamar"
QCO -> 'cò'
QDE -> 'dè'
QCAIT -> 'càit'

#[TODO] I WONDER IF YOU CAN ACTUALLY DEFINE AN EMPTY ITEM? AND IF YOU CANNOT, COULD YOU INSERT AND EMPTY ITEM SIGN USING PREPROCESSING RULES? FOR EXAMPLE AN x WHERE THERE IS NO RELATIVE a BEFORE A RELATIVE PHRASE
AREL[+POL] -> "a"
AREL[-POL] -> "nach"
#[TOWRITE] analysis of Dè rinn thu? without the 'a'
#TWO SOLUTIONS
#REL -> S[+POL] BUT NOT GOOD BECAUSE WILL LICENCE NON-QUESTION RELATIVE PHRASES WITHOUT AREL
#PREPROCESS SENTENCES TO FILL IN IMPORTANT SYNTACTIC MARKERS OMMITED IN SPEECH AND THUS SPELLING, BUT LIKELY PROBLEMS WITH CONTEXT: WOULD WORK FOR dè -> dè a BUT MORE DIFFICULT WITH a athair vs a h-athair

REL -> AREL[POL=?p] S[POL=?p,-INTERROG]

QREL[POL=?p] -> AREL[POL=?p] S[INTERROG=?i, POL=?p]
QREL[POL=?p] -> S[INTERROG=?i, POL=?p]

#[TODO] YES/NO QUESTIONS AND CONSTITUENT QUESTIONS

# YES/NO ANSWERS
S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=?s]

#[TODO] REVISE THIS WHOLE SECTION
### SENTENCES wrt VALENCY

#INTRANSITIVE

#[TOWRITE] THIS IS A SENTENCE WITH AN UNSPECIFIED PREDICATE - SO THERE IS A CASE FOR CALLING THIS SOMETHING ELSE, S-ANS - A SPECIAL INCOMPLETE SENTENCE JUST AS AN ANSWER
S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=subs] NP[CASE=nom]

S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=intr] NP[CASE=nom]

#SUBSTANTIVE
#[TOWRITE] ONLY NOM NPs CAN BE SUBJECTS
S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=subs] NP[CASE=nom] PRED[+ADVS] 
S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=monotr] NP[CASE=nom] PRED[+ADVS]

#[TODO] IMPLEMENT WIDER SENTENCE STRUCTURE WITH MONOTR AND DITR VERBS - HOW TO RESOLVE DIFFERENT TYPES OF PRED?

#[TODO] THA AN CÙ MÒR ACA AIR A' BHÒRD? things get curly when I add this rule... handling multiple PREDs of DIFFERENT TYPES
#S[INTERROG=?i, POL=?p] -> VI[INTERROG=?i, POL=?p, SUBCAT=subs] NP[CASE=nom] PRED[+ADVS] PRED[TYPE=pp]

### PREDICATES
#[TOWRITE][TODO] limiting features of type, to later match objects?
PRED[TYPE=ap] -> AP
PRED[TYPE=pp] -> PP
PRED[TYPE=np] -> NP[CASE=nom] 